{"ast":null,"code":"import _classCallCheck from \"/Users/kevinhu/Personal-Projects/snake/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinhu/Personal-Projects/snake/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinhu/Personal-Projects/snake/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinhu/Personal-Projects/snake/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinhu/Personal-Projects/snake/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kevinhu/Personal-Projects/snake/src/components/Grid.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\n\nvar Grid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Grid, _Component);\n\n  function Grid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Grid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      grid: new Array(15).fill([]).map(function (each) {\n        return each = new Array(15).fill(0);\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"material-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Start a New Game\"), React.createElement(\"div\", {\n        className: \"grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, this.state.grid.map(function (each) {\n        return React.createElement(\"div\", {\n          className: \"row1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, each.map(function (cell) {\n          return React.createElement(\"div\", {\n            className: \"cell1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          });\n        }));\n      })));\n    }\n  }]);\n\n  return Grid;\n}(Component);\n\nexport default Grid;","map":{"version":3,"sources":["/Users/kevinhu/Personal-Projects/snake/src/components/Grid.js"],"names":["React","Component","Grid","state","grid","Array","fill","map","each","cell"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;IAEMC,I;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,EAAnB,EAAuBC,GAAvB,CAA2B,UAAAC,IAAI;AAAA,eAAIA,IAAI,GAAG,IAAIH,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,CAAX;AAAA,OAA/B;AADF,K;;;;;;6BAIC;AACL,aACI;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,GAAhB,CAAoB,UAAAC,IAAI,EAAI;AACzB,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,IAAI,CAACD,GAAL,CAAS,UAAAE,IAAI,EAAI;AACd,iBACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,SALA,CADL,CADJ;AAUH,OAXA,CADL,CAFJ,CADJ;AAmBL;;;;EAzBgBR,S;;AA4BnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass Grid extends Component {\n    state = {\n        grid: new Array(15).fill([]).map(each => each = new Array(15).fill(0))\n    }\n    \n    render() {\n        return (\n            <div class=\"root\">\n                <button className=\"material-icon\">Start a New Game</button>\n                <div className=\"grid-container\">\n                    {this.state.grid.map(each => {\n                        return (\n                            <div className=\"row1\">\n                                {each.map(cell => {\n                                    return (\n                                        <div className=\"cell1\">\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        );\n  }\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}